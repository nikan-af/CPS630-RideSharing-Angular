!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@geoapify/geocoder-autocomplete")):"function"==typeof define&&define.amd?define("@geoapify/angular-geocoder-autocomplete",["exports","@angular/core","@geoapify/geocoder-autocomplete"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self).geoapify=e.geoapify||{},e.geoapify["angular-geocoder-autocomplete"]={}),e.ng.core,e["@geoapify/geocoder-autocomplete"])}(this,(function(e,t,i){"use strict";var o=new t.InjectionToken("geoapify.config"),s=function(){function e(e){this.config=e,this.placeSelect=new t.EventEmitter,this.suggestionsChange=new t.EventEmitter}return e.prototype.ngOnInit=function(){},e.prototype.ngAfterViewInit=function(){var e={};this.placeholder&&(e.placeholder=this.placeholder),this.type&&(e.type=this.type),this.lang&&(e.lang=this.lang),this.limit&&(e.limit=this.limit),this.skipIcons&&(e.skipIcons=this.skipIcons),this.skipDetails&&(e.skipDetails=this.skipDetails),this.autocomplete=new i.GeocoderAutocomplete(this.container.nativeElement,this.config.apiKey,e),this.value&&this.autocomplete.setValue(this.value),this.countryCodes&&(console.warn("WARNING! Obsolete function called. The  'countryCodes' input has been deprecated, please use the new 'filterByCountryCode' input instead!"),this.autocomplete.addFilterByCountry(this.countryCodes)),this.position&&(console.warn("WARNING! Obsolete function called. The  'position' input has been deprecated, please use the new 'biasByLocation' input instead!"),this.autocomplete.addBiasByProximity(this.position)),this.filterByCircle&&this.autocomplete.addFilterByCircle(this.filterByCircle),this.filterByCountryCode&&this.autocomplete.addFilterByCountry(this.filterByCountryCode),this.filterByRect&&this.autocomplete.addFilterByRect(this.filterByRect),this.biasByCircle&&this.autocomplete.addBiasByCircle(this.biasByCircle),this.biasByRect&&this.autocomplete.addBiasByRect(this.biasByRect),this.biasByProximity&&this.autocomplete.addBiasByProximity(this.biasByProximity),this.biasByCountryCode&&this.autocomplete.addBiasByCountry(this.biasByCountryCode),this.autocomplete.on("select",this.onSelect.bind(this)),this.autocomplete.on("suggestions",this.onSuggestions.bind(this))},e.prototype.onSelect=function(e){this.placeSelect.emit(e)},e.prototype.onSuggestions=function(e){this.suggestionsChange.emit(e)},e.prototype.ngOnChanges=function(e){this.autocomplete&&(e.value&&!e.value.isFirstChange()&&this.autocomplete.setValue(e.value.currentValue),e.type&&!e.type.isFirstChange()&&this.autocomplete.setType(e.type.currentValue),e.lang&&!e.lang.isFirstChange()&&this.autocomplete.setLang(e.lang.currentValue),e.filterByCircle&&!e.filterByCircle.isFirstChange()&&this.autocomplete.addFilterByCircle(e.filterByCircle.currentValue),e.filterByCountryCode&&!e.filterByCountryCode.isFirstChange()&&this.autocomplete.addFilterByCountry(e.filterByCountryCode.currentValue),e.filterByRect&&!e.filterByRect.isFirstChange()&&this.autocomplete.addFilterByRect(e.filterByRect.currentValue),e.biasByCircle&&!e.biasByCircle.isFirstChange()&&this.autocomplete.addBiasByCircle(e.biasByCircle.currentValue),e.biasByRect&&!e.biasByRect.isFirstChange()&&this.autocomplete.addBiasByRect(e.biasByRect.currentValue),e.biasByProximity&&!e.biasByProximity.isFirstChange()&&this.autocomplete.addBiasByProximity(e.biasByProximity.currentValue),e.biasByCountryCode&&!e.biasByCountryCode.isFirstChange()&&this.autocomplete.addBiasByCountry(e.biasByCountryCode.currentValue),e.countryCodes&&!e.countryCodes.isFirstChange()&&(console.warn("WARNING! Obsolete function called. The  'countryCodes' input has been deprecated, please use the new 'filterByCountryCode' input instead!"),this.autocomplete.addFilterByCountry(e.countryCodes.currentValue)),e.position&&!e.position.isFirstChange()&&(console.warn("WARNING! Obsolete function called. The  'position' input has been deprecated, please use the new 'biasByLocation' input instead!"),this.autocomplete.addBiasByProximity(e.position.currentValue)),e.limit&&!e.limit.isFirstChange()&&this.autocomplete.setLimit(e.limit.currentValue))},e.prototype.ngOnDestroy=function(){this.autocomplete.off("select",this.onSelect),this.autocomplete.off("suggestions",this.onSuggestions)},e}();s.decorators=[{type:t.Component,args:[{selector:"geoapify-geocoder-autocomplete",template:'<div class="geocoder-container" #container></div>',styles:[".geocoder-container {position: relative}"]}]}],s.ctorParameters=function(){return[{type:void 0,decorators:[{type:t.Inject,args:[o]}]}]},s.propDecorators={container:[{type:t.ViewChild,args:["container"]}],value:[{type:t.Input}],placeholder:[{type:t.Input}],type:[{type:t.Input}],skipIcons:[{type:t.Input}],skipDetails:[{type:t.Input}],lang:[{type:t.Input}],filterByCountryCode:[{type:t.Input}],filterByCircle:[{type:t.Input}],filterByRect:[{type:t.Input}],biasByCountryCode:[{type:t.Input}],biasByCircle:[{type:t.Input}],biasByRect:[{type:t.Input}],biasByProximity:[{type:t.Input}],countryCodes:[{type:t.Input}],position:[{type:t.Input}],limit:[{type:t.Input}],placeSelect:[{type:t.Output}],suggestionsChange:[{type:t.Output}]};var n=function(){function e(){}return e.withConfig=function(t){return{ngModule:e,providers:[{provide:o,useValue:{apiKey:t}}]}},e}();n.decorators=[{type:t.NgModule,args:[{declarations:[s],imports:[],exports:[s]}]}],e.GeoapifyGeocoderAutocompleteModule=n,e.GeocoderAutocompleteComponent=s,e.Éµa=o,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=geoapify-angular-geocoder-autocomplete.umd.min.js.map